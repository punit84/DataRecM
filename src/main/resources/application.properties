spring.profiles=LOCAL
# source datasource init
source.dbname=unicorngym
source.dbtype=postgres
source.url=jdbc:mysql://
source.hostname=unicorngym.cyjiwrynkuap.ap-south-1.rds.amazonaws.com
source.username=postgres
source.password=postgres123
source.port=5432
source.tableName=order
source.tableSchema=dms_sample
source.primarykey=order_id
source.ignoreList=timestamp
source.evaluateDataRules=true
source.printUnmatchedRecordSize=5


#Destination
destination.primarykey=order_id
destination.ignoreList=timestamp1
destination.dbname=unicorngym
#destination.dbtype=parquet
destination.dbtype=csv
destination.hostname=unicorngym.cyjiwrynkuap.ap-south-1.rds.amazonaws.com
destination.username=postgres
destination.password=postgres123
destination.port=5432
destination.output=s3://query-result1234
destination.region=ap-south-1
destination.tableName=csvunicorn_gym_2020_csv
destination.tableSchema=unicorngym

#


source.region=ap_south_1
source.reportFile=./DRMRecReport.txt

#List properties
source.rules[0]=select ordinal_position as \"colum_position\",column_name,\ncase \nwhen data_type= 'timestamp without time zone' then 'timestamp' \nwhen data_type= 'double precision' then 'float8' \nwhen data_type= 'character varying' then 'varchar' \nelse data_type \n   END \n   FROM information_schema.columns \n    WHERE table_name = \'<TABLENAME>\' \n    ORDER BY ordinal_position;\n;
source.rules[1]=SELECT count(*) as count from <TABLESCHEMA>.\"<TABLENAME>\";


source.ruledesc[0]=Rule 1: Matching of Field Count
source.ruledesc[1]=Rule 2: Matching of Field Name
source.ruledesc[2]=Rule 3: Matching of Field order
source.ruledesc[3]=Rule 4: Matching of Field Data Type
source.ruledesc[4]=Rule 5: Matching of Record Count
source.ruledesc[5]=Rule 6: Matching Record values

destination.timeout=100000



#source.ruledesc[4]=Rule 5: Matching count of Records

#3 metadata validation
# no of data rules 3

#metadatarules
destination.rules[0]=select ordinal_position as colum_position,column_name,data_type FROM information_schema.columns WHERE  table_schema = '<TABLESCHEMA>' AND table_name = '<TABLENAME>' ORDER BY ordinal_position;
destination.rules[1]=SELECT count(*) as count from \"<TABLESCHEMA>\".\"<TABLENAME>\";

#source.rules[1]=select count(*) from <TABLESCHEMA>.\"<TABLENAME>\";
#source.rules[2]=select count(*) from information_schema.columns where table_name =\'<TABLENAME>\';
#source.rules[3]=select * from <TABLESCHEMA>.\"<TABLENAME>\" limit 1;
#source.rules[3]=select count(*) from information_schema.columns where table_name =\'order\';
#source.rules[3]=select *,md5(CAST((order_id||customer_id||order_status||order_date||delivery_date||product_id||product_price||qty||order_value) AS text)) from dms_sample.order limit 10;
#source.rules[4]=select order_id, md5(CAST((order_id||customer_id||order_status||order_date||product_id||cast(product_price as numeric(30,2))||qty||order_value) AS text)) from <TABLESCHEMA>.\"<TABLENAME>\" order by order_id limit 1000;
#source.timeout=100000
#source.output="s3://query-result1234"
#source.sleep=1000

#Data rules
#destination.rules[1]=SELECT count(*) count FROM \"<TABLESCHEMA>\".\"<TABLENAME>\";
#destination.rules[1]=select ordinal_position as \"colum_position\",column_name ,\ncase \nwhen data_type= 'timestamp without time zone' then 'timestamp' \nwhen data_type= 'double precision' then 'float8' \nwhen data_type= 'character varying' then 'varchar' \nelse data_type \n   END \n   FROM information_schema.columns \n  WHERE table_name = \'<TABLENAME>\' \n    ORDER BY ordinal_position;\n;
#destination.rules[2]=SELECT count(*) FROM information_schema.columns WHERE  table_schema = \'<TABLESCHEMA>\' AND table_name = \'<TABLENAME>\';
#destination.rules[3]=SELECT * FROM \"<TABLESCHEMA>\".\"<TABLENAME>\" limit 1;

#destination.rules[3]=SELECT count(*)\nFROM information_schema.columns\nWHERE  table_schema = 'unicorngym'\nAND table_name = 'unicorn_gym_2020';
#destination.rules[3]=SELECT * FROM to_utf8(cast(order_id as varchar)||\ncast(customer_id as varchar)||\ncast(order_status as varchar)||\ncast(order_date as varchar)||\ncast(substr(delivery_date,1,19) as varchar)||\ncast(product_id as varchar)||\ncast(product_price as varchar)||\ncast(qty as varchar)||\ncast(order_value as varchar)) FROM \"unicorngym\".\"unicorn_gym_2020\" limit 1;
#destination.rules[4]=select order_id, md5(to_utf8(cast(order_id as varchar)||cast(customer_id as varchar)|| cast(order_status as varchar)|| cast(order_date as varchar)|| cast(product_id as varchar)|| cast(cast(product_price as decimal(30,2)) as varchar)|| cast(qty as varchar)|| cast(cast(order_value as decimal(30,2)) as varchar)))FROM \"<TABLESCHEMA>\".\"<TABLENAME>\" order by order_id limit 1000;


# Internationalization
spring.messages.basename=messages/messages


# Logging
logging.level.org.springframework=INFO
logging.level.sql=INFO
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE


